{
	"info": {
		"_postman_id": "28a56357-fcde-4f3a-895a-668cc45f8aed",
		"name": "dinuti",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "sign-up",
					"item": [
						{
							"name": "Register Kevin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3f554961-8416-4a27-a7e5-e0691f523668",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"kevin@gmail.com\", \"password\":\"kevin\", \"username\":\"Kevin\", \"firstName\": \"Kevin\", \"lastName\": \"B\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Florian",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f8ba8e8-3c03-4765-a77b-9532f16d3377",
										"exec": [
											"if (!(environment.isIntegrationTest)) {",
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"blayflorian@gmail.com\", \"password\":\"florian\", \"username\":\"Florian\", \"firstName\": \"Florian\", \"lastName\": \"Blay\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "login",
					"item": [
						{
							"name": "Login Florian and Remember Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											"",
											"if(tests['User has \"token\" property']){",
											"    postman.setEnvironmentVariable('token', user.token);",
											"}",
											"",
											"tests['Environment variable \"token\" has been set'] = environment.token === user.token;",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"blayflorian@gmail.com\", \"password\":\"florian\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users/login",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Kevin and Remember Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "febc3224-1f07-426d-ae01-e2112e6d8d50",
										"exec": [
											"var responseJSON = JSON.parse(responseBody);",
											"",
											"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
											"",
											"var user = responseJSON.user || {};",
											"",
											"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
											"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
											"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
											"",
											"if(tests['User has \"token\" property']){",
											"    postman.setEnvironmentVariable('token', user.token);",
											"}",
											"",
											"tests['Environment variable \"token\" has been set'] = environment.token === user.token;",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"user\":{\"email\":\"kevin@gmail.com\", \"password\":\"kevin\"}}"
								},
								"url": {
									"raw": "{{apiUrl}}/users/login",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Current User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
									"",
									"var user = responseJSON.user || {};",
									"",
									"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
									"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
									"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/user",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
									"",
									"var user = responseJSON.user || {};",
									"",
									"tests['User has \"email\" property'] = user.hasOwnProperty('email');",
									"tests['User has \"username\" property'] = user.hasOwnProperty('username');",
									"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"user\":{\"email\":\"john@jacob.com\"}}"
						},
						"url": {
							"raw": "{{apiUrl}}/user",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Profiles",
			"item": [
				{
					"name": "Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d609ec7-1c06-4925-80e3-3e477ac3051d",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"",
									"    tests['Response contains \"profile\" property'] = responseJSON.hasOwnProperty('profile');",
									"    ",
									"    var profile = responseJSON.profile || {};",
									"    ",
									"    tests['Profile has \"username\" property'] = profile.hasOwnProperty('username');",
									"}",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/profiles/florian",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"profiles",
								"florian"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Location",
			"item": [
				{
					"name": "add location",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "669820b1-18f8-449e-86f1-664e07bec704",
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"location\": {\n\t\"desc\": \"Ceci est une description\"\n\t}\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/location",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"location"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Session",
			"item": [
				{
					"name": "new session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "669820b1-18f8-449e-86f1-664e07bec704",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"session\" property'] = responseJSON.hasOwnProperty('session');",
									"",
									"var session = responseJSON.session || {};",
									"",
									"tests['session has \"floor\" property'] = session.hasOwnProperty('user');",
									"tests['session has \"room\" property'] = session.hasOwnProperty('location');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"session\": {\n\t\"phone\": \"0606060606\",\n\t\"mobile\": \"0202020202\",\n\t\"location\": {\n\t\t\"desc\": \"Ceci est une description\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/session",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}